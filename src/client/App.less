@import "./colors.less";

body {
    background-color: @appBackground;
    overflow: auto;
    .unselectable();
}

#react-app {
    height: 100vh;
    display: flex;
    flex-direction: column;
    color: @defaultGray;
    font-family: Arial, Helvetica, sans-serif;
    font-size: 1em;
    font-weight: 600;
    line-height: 1.2em;
    text-transform: uppercase;
    text-align: center;
    letter-spacing: 2px;
    text-shadow: -1px 1px 1px rgb(24, 24, 24);

    a:visited {
        color: inherit;
    }
}

* {
    font-family: inherit;
}

#title {
    text-align: center;
    position: absolute;
    margin: 24px 0px;
    width: 100%;
    font-size: 1.6em;
    color: @defaultGray;
    animation-duration: 1s;
    animation-name: title-slidedown;
}

@keyframes title-slidedown {
    from {
        top: -48px
    }
    to {
        top: 0
    }
}

*:focus {
    outline: none;
}

#mainBoards {
    z-index: 0;
    margin: auto;
}

.boardRow {
    display: flex;
    justify-content: center;
    width: 1296px;
    margin: auto;
}

.board {
    margin: 8px 24px;
    display: flex;
    flex-direction: column;
    flex-shrink: 0;
    justify-content: center;
    align-items: center;
    min-width: 600px;
}

#info {
    z-index: 0;
    pointer-events: none;
    height: 56px;
    flex-shrink: 0;
}

.unselectable {
    user-select: none;
}

.colorTransition {
    transition: color 0.3s ease-out;
}

.transitionAllColor {
    transition: color 0.3s ease-out, background-color 0.3s ease-out, border-color 0.3s ease-out, box-shadow 0.3s ease-out, filter 0.3s ease-out;
}

.panel {
    position: relative;
    display: flex;
    background-color: @panelGray;
    width: fit-content;
    margin: 8px 8px 10px 8px;

    .isometricBoxShadow {
        width: 100%;
        height: 100%;
        position: absolute;
        z-index: -2;
        box-shadow: currentColor -1px 1px, currentColor -2px 2px;
        .saturate & {
            filter: saturate(300%);
        }
    }
}

.label {
    text-shadow: 0 0 16px @darkTextShadow;
    .isPlaying& {
        filter: saturate(300%);
    }
}

.saturate {
    .colorize {
        .saturate.colorize()
    }
}

.saturate.colorize {
    filter: saturate(300%);
}

.play {
    &:hover,
    .isPlaying& {
        color: @green;
    }
    &:active {
        color: @brightGreen;
    }
}
.stop {
    &:hover {
        color: @orange;
    }
    &:active {
        color: @brightOrange;
    }
}
.restart {
    &:hover {
        color: @purple;
    }
    &:active {
        color: @brightPurple;
    }
}
.export {
    &:hover {
        color: @blue;
    }
    &:active {
        color: @brightBlue;
    }
}
.record {
    &:hover {
        color: @red;
    }
    &:active {
        color: @brightRed;
    }
}
