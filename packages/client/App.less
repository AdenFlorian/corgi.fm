@import "./colors.less";
@import "./AppCommon.less";

body {
    background-color: @appBackground;
    color: @defaultGray;
    font-family: 'Muli', sans-serif;
    overflow: auto;
    .unselectable();
}

#react-app {
    height: 100vh;
    display: flex;
    flex-direction: column;
    color: @defaultGray;
    font-size: 16px;
    line-height: 16px;
    text-align: center;
}

#title {
    text-align: center;
    position: absolute;
    margin: 24px 0px;
    width: 100%;
    font-size: 1.6em;
    color: @defaultGray;
    animation-duration: 1s;
    animation-name: title-slidedown;
}

@keyframes title-slidedown {
    from {
        top: -48px
    }
    to {
        top: 0
    }
}

*:focus {
    outline: none;
}

a {
    color: inherit;

    &:hover {
        filter: brightness(125%)
    }
}

#mainBoards {
    z-index: 0;
    margin: auto;
    position: relative;
}

.board {
    // margin: 8px 24px;
    display: flex;
    flex-direction: column;
    flex-shrink: 0;
    justify-content: center;
    align-items: center;
    min-width: 600px;
}

.nameAutosizeInput input {
    min-width: 80px;
    .largeFont();
    font-size: inherit;
    text-decoration: inherit;
    border: none;
    background-color: @panelGrayDark;
    padding: 0 8px;
    height: 32px;
    color: currentColor;
}

.usernameFont {
    .largeFont();

    .blob & {
        margin-top: 1px;
    }
}

.restricted {
    #mainBoards * {
        pointer-events: none !important;
    }
}

#info {
    z-index: 0;
    pointer-events: none;
    height: 56px;
    flex-shrink: 0;
}

.unselectable {
    user-select: none;
}

.colorTransition {
    transition: color 0.3s ease-out;
}

.transitionAllColor {
    transition: color 0.3s ease-out, background-color 0.3s ease-out, border-color 0.3s ease-out, box-shadow 0.3s ease-out, filter 0.3s ease-out;
}

.saturate {
    .colorize {
        .saturate.colorize()
    }
}

.highlight {
    filter: brightness(2)
}

.handle.handleVisual {
    // cursor: grab;
    
    &:hover {
        // filter: brightness(2)
    }
    &:active {
        cursor: grabbing;
        // filter: brightness(3)
    }
}

.saturate.colorize {
    // filter: saturate(300%);
}

.play {
    &:hover,
    .isPlaying&,
    .isPlaying & {
        color: @green;
    }
    &:active {
        color: @brightGreen;
    }
}
.stop {
    &:hover {
        color: @red;
    }
    &:active {
        color: @brightRed;
    }
}
.restart {
    &:hover {
        color: @purple;
    }
    &:active {
        color: @brightPurple;
    }
}
.export {
    &:hover {
        color: @blue;
    }
    &:active {
        color: @brightBlue;
    }
}
.record {
    &:hover,
    .isRecording&,
    .isRecording & {
        color: @red;
    }
    &:active {
        color: @brightRed;
    }
}
.erase {
    &:hover {
        color: @red;
    }
    &:active {
        color: @brightRed;
    }
}
.undo {
    &:hover {
        color: @blue;
    }
    &:active {
        color: @brightBlue;
    }
}
.style {
    &:active {
        filter: saturate(2);
    }
    svg:hover {
        path {
            fill: url(#rainbow);
        }
    }
}
.showRows {
    &:hover {
        color: @blue;
    }
    &:active {
        color: @brightBlue;
    }
}

svg {
    // filter: drop-shadow(@shadow);
}

.readonly {
    filter: brightness(0.5);
}

.disabled {
    .readonly();
    pointer-events: none;
}

// Utility classes
.vert-space-16 {
    & > * + * {
        margin-top: 16px;
    }
}

// Cookie consent
.cc-bottom {
    bottom: 3em;
}
.cc-right {
    right: 1em;
}

.cc-window, .cc-btn {
    border-radius: @mainBorderRadius;
}

.cc-revoke, .cc-window {
    position: fixed;
    overflow: hidden;
    box-sizing: border-box;
    font-family:inherit;
    font-size: 16px;
    line-height: 1.5em;
    display: flex;
    flex-wrap: nowrap;
    z-index: 9999;
}
.cc-window.cc-floating {
    padding: 2em;
    max-width: 24em;
    -ms-flex-direction: column;
    flex-direction: column;
}
.cc-link {
    opacity: .8;
    display: inline-block;
    padding: 0;
}

.blob {
    background-color: @panelGray;
    border-radius: @mainBorderRadius;
    min-height: 32px;
    display: flex;
    align-items: center;
    width: fit-content;
    @panelShadow();

    & > * {
        height: 100%;
        display: flex;
        align-items: center;
        padding: 0 8px;

        &:first-child {
            border-top-left-radius: @mainBorderRadius;
            border-bottom-left-radius: @mainBorderRadius;
        }
    
        &:last-child {
            border-top-right-radius: @mainBorderRadius;
            border-bottom-right-radius: @mainBorderRadius;
        }
    }

    .blobDark {
        background-color: @panelGrayDark;
    }
}

.pointerName {
    .largeFont();
}

// cookie consent
.cc-window, .cc-btn {
    border-radius: @mainBorderRadius;
}

.zoomBlock {
    position: fixed;
    top: 0;
    left: 0;
    height: 100vh;
    width: 100vw;
    opacity: 0;
    z-index: 9999999;
    cursor: grab;
    user-select: none;
}
