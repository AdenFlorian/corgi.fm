{
    "parser": "@typescript-eslint/parser",
    "parserOptions": {
        "ecmaVersion": 2019,
        "sourceType": "module"
    },
    "env": {
        "es6": true
    },
    "globals": {
        "Atomics": "readonly",
        "SharedArrayBuffer": "readonly"
    },
    "extends": [
        "eslint:recommended",
        "plugin:jest/recommended",
        "plugin:import/errors",
        "plugin:import/warnings",
        "plugin:import/typescript",
        "plugin:@typescript-eslint/recommended",
        "plugin:unicorn/recommended",
        "airbnb"
    ],
    "plugins": [
        "@typescript-eslint",
        "jest",
        "import",
        "unicorn"
    ],
    "overrides": [
        {
            "files": "*.spec.*",
            "env": {
                "jest": true
            }
        }
    ],
    "rules": {
        "no-unused-expressions": "off",
        "@typescript-eslint/no-object-literal-type-assertion": "off",
        // The basics
        "quotes": [
            "error",
            "single",
            {
                "allowTemplateLiterals": true
            }
        ],
        "semi": [
            "error",
            "never"
        ],
        "no-case-declarations": "off",
        // jest
        "jest/valid-describe": "off",
        // import
        "import/no-unassigned-import": [
            "error",
            {
                "allow": [
                    "**/*.html",
                    "**/*.css",
                    "**/*.less",
                    "babel-polyfill"
                ]
            }
        ],
        // SLOW
        // "import/no-internal-modules": [
        //     "error",
        //     {
        //         "allow": [
        //             "react-icons/**",
        //             "redux-devtools-extension/*",
        //             "firebase/*"
        //         ]
        //     }
        // ],
        // SLOW and doesn't even work
        "import/no-self-import": "off",
        // SLOW and doesn't even work most the time
        "import/no-useless-path-segments": "off",
        // Shouldn't need when using typescript
        "no-prototype-builtins": "off",
        "import/named": "off",
        // Other
        "radix": "off",
        "no-console": "error",
        "no-trailing-spaces": "error",
        "no-multiple-empty-lines": [
            "error",
            {
                "max": 1,
                "maxBOF": 0,
                "maxEOF": 0
            }
        ],
        "import/newline-after-import": [
            "error",
            {
                "count": 1
            }
        ],
        "import/order": [
            "error",
            {
                "newlines-between": "never"
            }
        ],
        "comma-dangle": [
            "error",
            "always-multiline"
        ],
        "comma-spacing": [
            "error",
            {
                "before": false,
                "after": true
            }
        ],
        "object-curly-spacing": [
            "error",
            "never"
        ],
        "import/no-unresolved": "off",
        "no-useless-constructor": "off",
        "@typescript-eslint/no-useless-constructor": "error",
        "import/prefer-default-export": "off",
        "object-curly-newline": [
            "error",
            {
                "multiline": true,
                "minProperties": 99,
                "consistent": true
            }
        ],
        "no-use-before-define": "off",
        "func-call-spacing": "off",
        "@typescript-eslint/func-call-spacing": "error",
        "no-spaced-func": "off",
        // "import/no-extraneous-dependencies": [
        //     "error",
        //     {
        //         "devDependencies": [
        //             "**/*.spec.*"
        //         ]
        //     }
        // ],
        "import/no-extraneous-dependencies": "off",
        "no-restricted-imports": [
            "error",
            "@sentry/utils"
        ],
        // Typescript
        "indent": "off",
        "@typescript-eslint/indent": [
            "error",
            "tab",
            {
                "SwitchCase": 1
            }
        ],
        "@typescript-eslint/explicit-function-return-type": "off",
        "@typescript-eslint/no-parameter-properties": "off",
        "@typescript-eslint/no-empty-interface": "off",
        "@typescript-eslint/no-floating-promises": "error",
        "@typescript-eslint/prefer-readonly": "error",
        "@typescript-eslint/await-thenable": "error",
        "@typescript-eslint/no-for-in-array": "error",
        // TODO
        // "@typescript-eslint/no-misused-promises": "error",
        "@typescript-eslint/no-unnecessary-qualifier": "error",
        "@typescript-eslint/no-unnecessary-type-assertion": "error",
        "@typescript-eslint/prefer-includes": "error",
        "@typescript-eslint/prefer-regexp-exec": "error",
        "@typescript-eslint/prefer-string-starts-ends-with": "error",
        // Too many false positives
        "@typescript-eslint/promise-function-async": "off",
        "@typescript-eslint/require-array-sort-compare": "error",
        "@typescript-eslint/restrict-plus-operands": "off",
        // TODO
        // "@typescript-eslint/strict-boolean-expressions": "error",
        "@typescript-eslint/unbound-method": "error",
        // My personal style
        "arrow-parens": [
            "error",
            "as-needed"
        ],
        "no-underscore-dangle": "off",
        "lines-between-class-members": [
            "error",
            "always",
            {
                "exceptAfterSingleLine": true
            }
        ],
        "no-confusing-arrow": "off",
        "no-return-assign": "off",
        "no-nested-ternary": "off",
        "block-spacing": [
            "error",
            "never"
        ],
        "no-plusplus": "off",
        "no-unused-vars": "off",
        // Don't think this is needed because ts checks it
        "@typescript-eslint/no-unused-vars": "off",
        // "@typescript-eslint/no-unused-vars": [
        //     "error",
        //     {
        //         "vars": "all",
        //         "args": "none",
        //         "ignoreRestSiblings": false
        //     }
        // ],
        "quote-props": [
            "error",
            "consistent-as-needed"
        ],
        "no-alert": "off",
        "@typescript-eslint/no-use-before-define": "off",
        "@typescript-eslint/member-delimiter-style": [
            "error",
            {
                "multiline": {
                    "delimiter": "none"
                },
                "singleline": {
                    "delimiter": "comma"
                }
            }
        ],
        "@typescript-eslint/camelcase": "off",
        // To be turned on at future time
        "no-tabs": "off",
        "linebreak-style": "off",
        // TODO
        // "max-len": [
        //     "error",
        //     {
        //         "ignorePattern": "^import |^export {(.*?)}|class [a-zA-Z]+ implements |//"
        //     }
        // ],
        "max-len": "off",
        "operator-linebreak": "off",
        "function-paren-newline": "off",
        "consistent-return": "off",
        "no-else-return": "off",
        "prefer-template": "off",
        "prefer-destructuring": "off",
        "arrow-body-style": "off",
        "implicit-arrow-linebreak": "off",
        "no-empty-function": [
            "error",
            {
                "allow": [
                    "constructors"
                ]
            }
        ],
        "prefer-arrow-callback": "off",
        "jsx-a11y/no-static-element-interactions": "off",
        "jsx-a11y/click-events-have-key-events": "off",
        "class-methods-use-this": "off",
        "jsx-a11y/label-has-associated-control": "off",
        "jsx-a11y/label-has-for": "off",
        "no-useless-return":"off",
        "padded-blocks": "off",
        "no-path-concat": "off",
        "default-case": "off",
        "@typescript-eslint/no-non-null-assertion": "off",
        "@typescript-eslint/interface-name-prefix": "off",
        "@typescript-eslint/no-explicit-any": "off",
        // Unicorn
        "unicorn/prevent-abbreviations": "off",
        "unicorn/new-for-builtins": "off",
        "unicorn/no-zero-fractions": "off",
        "unicorn/filename-case": "off",
        "unicorn/prefer-add-event-listener": "off",
        "unicorn/prefer-query-selector": "off"
    }
}
